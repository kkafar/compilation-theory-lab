
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "nonassocIFnonassocELSEleft+-left*/leftMATRIX_PLUSMATRIX_SUBleftMATRIX_MULMATRIX_DIVBREAK COMMENT CONTINUE DIV_ASSIGN DT_FLOAT DT_INTEGER DT_STRING ELSE EYE FOR ID IF MATRIX_DIV MATRIX_MUL MATRIX_PLUS MATRIX_SUB MUL_ASSIGN ONES PLUS_ASSIGN PRINT RELOP_EQ RELOP_GE RELOP_GT RELOP_LE RELOP_LT RELOP_NE RETURN SUB_ASSIGN WHILE ZEROSprogram : instructions_optinstructions_opt : instructions instructions_opt : \n        instructions : instructions instruction\n                    | instruction\n    \n        instruction : assignment ';'\n    \n        assignment : assign_id '=' expression\n                    | assign_id MUL_ASSIGN expression\n                    | assign_id DIV_ASSIGN expression\n                    | assign_id PLUS_ASSIGN expression\n                    | assign_id SUB_ASSIGN expression\n    \n        assign_id : ID\n                  | ID vector\n    expression : expression_binop\n                  | expression_relop\n                  | expression_unary\n                  | matrix_funcs\n                  | constant\n                  | ID\n                  | matrix\n                  | '(' expression ')'\n                  expression_binop : expression '+' expression\n                | expression '-' expression\n                | expression '*' expression\n                | expression '/' expression\n                | expression MATRIX_PLUS expression\n                | expression MATRIX_SUB expression\n                | expression MATRIX_MUL expression\n                | expression MATRIX_DIV expression\n    expression_relop : expression RELOP_EQ expression\n                | expression RELOP_GT expression\n                | expression RELOP_LT expression\n                | expression RELOP_GE expression\n                | expression RELOP_LE expression\n                | expression RELOP_NE expression\n    expression_unary : '-' expression\n                | expression '\\''\n    \n        matrix_funcs : ZEROS '(' DT_INTEGER ')'\n                    | ONES '(' DT_INTEGER ')'\n                    | EYE '(' DT_INTEGER ')'  \n\n    \n        constant : DT_STRING\n                | number\n    \n        matrix : '[' vectors ']'\n\n     vectors : vector \n                | vectors ',' vector\n    \n        vector : '[' numbers ']'\n    \n        numbers : numbers ',' number \n                | number\n                | \n    \n        number : DT_INTEGER \n               | DT_FLOAT\n    "
    
_lr_action_items = {'$end':([0,1,2,3,4,8,9,],[-3,0,-1,-2,-5,-4,-6,]),'ID':([0,3,4,8,9,10,11,12,13,14,25,26,41,42,43,44,45,46,47,48,49,50,51,52,53,54,],[7,7,-5,-4,-6,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),';':([5,17,18,19,20,21,22,23,24,28,31,32,34,35,36,37,38,55,57,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,83,86,87,88,],[9,-7,-14,-15,-16,-17,-18,-19,-20,-50,-41,-42,-51,-8,-9,-10,-11,-37,-36,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-21,-43,-38,-39,-40,]),'=':([6,7,15,63,],[10,-12,-13,-46,]),'MUL_ASSIGN':([6,7,15,63,],[11,-12,-13,-46,]),'DIV_ASSIGN':([6,7,15,63,],[12,-12,-13,-46,]),'PLUS_ASSIGN':([6,7,15,63,],[13,-12,-13,-46,]),'SUB_ASSIGN':([6,7,15,63,],[14,-12,-13,-46,]),'[':([7,10,11,12,13,14,25,26,33,41,42,43,44,45,46,47,48,49,50,51,52,53,54,84,],[16,33,33,33,33,33,33,33,16,33,33,33,33,33,33,33,33,33,33,33,33,33,33,16,]),'(':([10,11,12,13,14,25,26,27,29,30,41,42,43,44,45,46,47,48,49,50,51,52,53,54,],[25,25,25,25,25,25,25,58,59,60,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'-':([10,11,12,13,14,17,18,19,20,21,22,23,24,25,26,28,31,32,34,35,36,37,38,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,83,86,87,88,],[26,26,26,26,26,42,-14,-15,-16,-17,-18,-19,-20,26,26,-50,-41,-42,-51,42,42,42,42,26,26,26,26,26,26,26,26,26,26,26,26,26,26,-37,42,-36,-22,-23,-24,-25,-26,-27,-28,-29,42,42,42,42,42,42,-21,-43,-38,-39,-40,]),'ZEROS':([10,11,12,13,14,25,26,41,42,43,44,45,46,47,48,49,50,51,52,53,54,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'ONES':([10,11,12,13,14,25,26,41,42,43,44,45,46,47,48,49,50,51,52,53,54,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'EYE':([10,11,12,13,14,25,26,41,42,43,44,45,46,47,48,49,50,51,52,53,54,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'DT_STRING':([10,11,12,13,14,25,26,41,42,43,44,45,46,47,48,49,50,51,52,53,54,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'DT_INTEGER':([10,11,12,13,14,16,25,26,41,42,43,44,45,46,47,48,49,50,51,52,53,54,58,59,60,64,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,80,81,82,28,]),'DT_FLOAT':([10,11,12,13,14,16,25,26,41,42,43,44,45,46,47,48,49,50,51,52,53,54,64,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),']':([16,28,34,39,40,61,62,63,85,89,],[-49,-50,-51,63,-48,83,-44,-46,-47,-45,]),',':([16,28,34,39,40,61,62,63,85,89,],[-49,-50,-51,64,-48,84,-44,-46,-47,-45,]),'+':([17,18,19,20,21,22,23,24,28,31,32,34,35,36,37,38,55,56,57,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,83,86,87,88,],[41,-14,-15,-16,-17,-18,-19,-20,-50,-41,-42,-51,41,41,41,41,-37,41,-36,-22,-23,-24,-25,-26,-27,-28,-29,41,41,41,41,41,41,-21,-43,-38,-39,-40,]),'*':([17,18,19,20,21,22,23,24,28,31,32,34,35,36,37,38,55,56,57,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,83,86,87,88,],[43,-14,-15,-16,-17,-18,-19,-20,-50,-41,-42,-51,43,43,43,43,-37,43,43,43,43,-24,-25,-26,-27,-28,-29,43,43,43,43,43,43,-21,-43,-38,-39,-40,]),'/':([17,18,19,20,21,22,23,24,28,31,32,34,35,36,37,38,55,56,57,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,83,86,87,88,],[44,-14,-15,-16,-17,-18,-19,-20,-50,-41,-42,-51,44,44,44,44,-37,44,44,44,44,-24,-25,-26,-27,-28,-29,44,44,44,44,44,44,-21,-43,-38,-39,-40,]),'MATRIX_PLUS':([17,18,19,20,21,22,23,24,28,31,32,34,35,36,37,38,55,56,57,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,83,86,87,88,],[45,-14,-15,-16,-17,-18,-19,-20,-50,-41,-42,-51,45,45,45,45,-37,45,45,45,45,45,45,-26,-27,-28,-29,45,45,45,45,45,45,-21,-43,-38,-39,-40,]),'MATRIX_SUB':([17,18,19,20,21,22,23,24,28,31,32,34,35,36,37,38,55,56,57,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,83,86,87,88,],[46,-14,-15,-16,-17,-18,-19,-20,-50,-41,-42,-51,46,46,46,46,-37,46,46,46,46,46,46,-26,-27,-28,-29,46,46,46,46,46,46,-21,-43,-38,-39,-40,]),'MATRIX_MUL':([17,18,19,20,21,22,23,24,28,31,32,34,35,36,37,38,55,56,57,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,83,86,87,88,],[47,-14,-15,-16,-17,-18,-19,-20,-50,-41,-42,-51,47,47,47,47,-37,47,47,47,47,47,47,47,47,-28,-29,47,47,47,47,47,47,-21,-43,-38,-39,-40,]),'MATRIX_DIV':([17,18,19,20,21,22,23,24,28,31,32,34,35,36,37,38,55,56,57,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,83,86,87,88,],[48,-14,-15,-16,-17,-18,-19,-20,-50,-41,-42,-51,48,48,48,48,-37,48,48,48,48,48,48,48,48,-28,-29,48,48,48,48,48,48,-21,-43,-38,-39,-40,]),'RELOP_EQ':([17,18,19,20,21,22,23,24,28,31,32,34,35,36,37,38,55,56,57,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,83,86,87,88,],[49,-14,-15,-16,-17,-18,-19,-20,-50,-41,-42,-51,49,49,49,49,-37,49,-36,-22,-23,-24,-25,-26,-27,-28,-29,49,49,49,49,49,49,-21,-43,-38,-39,-40,]),'RELOP_GT':([17,18,19,20,21,22,23,24,28,31,32,34,35,36,37,38,55,56,57,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,83,86,87,88,],[50,-14,-15,-16,-17,-18,-19,-20,-50,-41,-42,-51,50,50,50,50,-37,50,-36,-22,-23,-24,-25,-26,-27,-28,-29,50,50,50,50,50,50,-21,-43,-38,-39,-40,]),'RELOP_LT':([17,18,19,20,21,22,23,24,28,31,32,34,35,36,37,38,55,56,57,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,83,86,87,88,],[51,-14,-15,-16,-17,-18,-19,-20,-50,-41,-42,-51,51,51,51,51,-37,51,-36,-22,-23,-24,-25,-26,-27,-28,-29,51,51,51,51,51,51,-21,-43,-38,-39,-40,]),'RELOP_GE':([17,18,19,20,21,22,23,24,28,31,32,34,35,36,37,38,55,56,57,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,83,86,87,88,],[52,-14,-15,-16,-17,-18,-19,-20,-50,-41,-42,-51,52,52,52,52,-37,52,-36,-22,-23,-24,-25,-26,-27,-28,-29,52,52,52,52,52,52,-21,-43,-38,-39,-40,]),'RELOP_LE':([17,18,19,20,21,22,23,24,28,31,32,34,35,36,37,38,55,56,57,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,83,86,87,88,],[53,-14,-15,-16,-17,-18,-19,-20,-50,-41,-42,-51,53,53,53,53,-37,53,-36,-22,-23,-24,-25,-26,-27,-28,-29,53,53,53,53,53,53,-21,-43,-38,-39,-40,]),'RELOP_NE':([17,18,19,20,21,22,23,24,28,31,32,34,35,36,37,38,55,56,57,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,83,86,87,88,],[54,-14,-15,-16,-17,-18,-19,-20,-50,-41,-42,-51,54,54,54,54,-37,54,-36,-22,-23,-24,-25,-26,-27,-28,-29,54,54,54,54,54,54,-21,-43,-38,-39,-40,]),"'":([17,18,19,20,21,22,23,24,28,31,32,34,35,36,37,38,55,56,57,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,83,86,87,88,],[55,-14,-15,-16,-17,-18,-19,-20,-50,-41,-42,-51,55,55,55,55,-37,55,-36,-22,-23,-24,-25,-26,-27,-28,-29,55,55,55,55,55,55,-21,-43,-38,-39,-40,]),')':([18,19,20,21,22,23,24,28,31,32,34,55,56,57,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,86,87,88,],[-14,-15,-16,-17,-18,-19,-20,-50,-41,-42,-51,-37,79,-36,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-21,86,87,88,-43,-38,-39,-40,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'instructions_opt':([0,],[2,]),'instructions':([0,],[3,]),'instruction':([0,3,],[4,8,]),'assignment':([0,3,],[5,5,]),'assign_id':([0,3,],[6,6,]),'vector':([7,33,84,],[15,62,89,]),'expression':([10,11,12,13,14,25,26,41,42,43,44,45,46,47,48,49,50,51,52,53,54,],[17,35,36,37,38,56,57,65,66,67,68,69,70,71,72,73,74,75,76,77,78,]),'expression_binop':([10,11,12,13,14,25,26,41,42,43,44,45,46,47,48,49,50,51,52,53,54,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'expression_relop':([10,11,12,13,14,25,26,41,42,43,44,45,46,47,48,49,50,51,52,53,54,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'expression_unary':([10,11,12,13,14,25,26,41,42,43,44,45,46,47,48,49,50,51,52,53,54,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'matrix_funcs':([10,11,12,13,14,25,26,41,42,43,44,45,46,47,48,49,50,51,52,53,54,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'constant':([10,11,12,13,14,25,26,41,42,43,44,45,46,47,48,49,50,51,52,53,54,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'matrix':([10,11,12,13,14,25,26,41,42,43,44,45,46,47,48,49,50,51,52,53,54,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'number':([10,11,12,13,14,16,25,26,41,42,43,44,45,46,47,48,49,50,51,52,53,54,64,],[32,32,32,32,32,40,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,85,]),'numbers':([16,],[39,]),'vectors':([33,],[61,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> instructions_opt','program',1,'p_program','Mparser.py',30),
  ('instructions_opt -> instructions','instructions_opt',1,'p_instruction_opt_1','Mparser.py',34),
  ('instructions_opt -> <empty>','instructions_opt',0,'p_instruction_opt_2','Mparser.py',38),
  ('instructions -> instructions instruction','instructions',2,'p_instructions','Mparser.py',43),
  ('instructions -> instruction','instructions',1,'p_instructions','Mparser.py',44),
  ('instruction -> assignment ;','instruction',2,'p_instruction','Mparser.py',50),
  ('assignment -> assign_id = expression','assignment',3,'p_assignment','Mparser.py',56),
  ('assignment -> assign_id MUL_ASSIGN expression','assignment',3,'p_assignment','Mparser.py',57),
  ('assignment -> assign_id DIV_ASSIGN expression','assignment',3,'p_assignment','Mparser.py',58),
  ('assignment -> assign_id PLUS_ASSIGN expression','assignment',3,'p_assignment','Mparser.py',59),
  ('assignment -> assign_id SUB_ASSIGN expression','assignment',3,'p_assignment','Mparser.py',60),
  ('assign_id -> ID','assign_id',1,'p_assign_id','Mparser.py',66),
  ('assign_id -> ID vector','assign_id',2,'p_assign_id','Mparser.py',67),
  ('expression -> expression_binop','expression',1,'p_expression','Mparser.py',72),
  ('expression -> expression_relop','expression',1,'p_expression','Mparser.py',73),
  ('expression -> expression_unary','expression',1,'p_expression','Mparser.py',74),
  ('expression -> matrix_funcs','expression',1,'p_expression','Mparser.py',75),
  ('expression -> constant','expression',1,'p_expression','Mparser.py',76),
  ('expression -> ID','expression',1,'p_expression','Mparser.py',77),
  ('expression -> matrix','expression',1,'p_expression','Mparser.py',78),
  ('expression -> ( expression )','expression',3,'p_expression','Mparser.py',79),
  ('expression_binop -> expression + expression','expression_binop',3,'p_expression_binop','Mparser.py',84),
  ('expression_binop -> expression - expression','expression_binop',3,'p_expression_binop','Mparser.py',85),
  ('expression_binop -> expression * expression','expression_binop',3,'p_expression_binop','Mparser.py',86),
  ('expression_binop -> expression / expression','expression_binop',3,'p_expression_binop','Mparser.py',87),
  ('expression_binop -> expression MATRIX_PLUS expression','expression_binop',3,'p_expression_binop','Mparser.py',88),
  ('expression_binop -> expression MATRIX_SUB expression','expression_binop',3,'p_expression_binop','Mparser.py',89),
  ('expression_binop -> expression MATRIX_MUL expression','expression_binop',3,'p_expression_binop','Mparser.py',90),
  ('expression_binop -> expression MATRIX_DIV expression','expression_binop',3,'p_expression_binop','Mparser.py',91),
  ('expression_relop -> expression RELOP_EQ expression','expression_relop',3,'p_expression_relop','Mparser.py',96),
  ('expression_relop -> expression RELOP_GT expression','expression_relop',3,'p_expression_relop','Mparser.py',97),
  ('expression_relop -> expression RELOP_LT expression','expression_relop',3,'p_expression_relop','Mparser.py',98),
  ('expression_relop -> expression RELOP_GE expression','expression_relop',3,'p_expression_relop','Mparser.py',99),
  ('expression_relop -> expression RELOP_LE expression','expression_relop',3,'p_expression_relop','Mparser.py',100),
  ('expression_relop -> expression RELOP_NE expression','expression_relop',3,'p_expression_relop','Mparser.py',101),
  ('expression_unary -> - expression','expression_unary',2,'p_expression_unary','Mparser.py',106),
  ("expression_unary -> expression '",'expression_unary',2,'p_expression_unary','Mparser.py',107),
  ('matrix_funcs -> ZEROS ( DT_INTEGER )','matrix_funcs',4,'p_matrix_funcs','Mparser.py',113),
  ('matrix_funcs -> ONES ( DT_INTEGER )','matrix_funcs',4,'p_matrix_funcs','Mparser.py',114),
  ('matrix_funcs -> EYE ( DT_INTEGER )','matrix_funcs',4,'p_matrix_funcs','Mparser.py',115),
  ('constant -> DT_STRING','constant',1,'p_constant','Mparser.py',122),
  ('constant -> number','constant',1,'p_constant','Mparser.py',123),
  ('matrix -> [ vectors ]','matrix',3,'p_matrix','Mparser.py',129),
  ('vectors -> vector','vectors',1,'p_vectors','Mparser.py',135),
  ('vectors -> vectors , vector','vectors',3,'p_vectors','Mparser.py',136),
  ('vector -> [ numbers ]','vector',3,'p_vector','Mparser.py',142),
  ('numbers -> numbers , number','numbers',3,'p_numbers','Mparser.py',148),
  ('numbers -> number','numbers',1,'p_numbers','Mparser.py',149),
  ('numbers -> <empty>','numbers',0,'p_numbers','Mparser.py',150),
  ('number -> DT_INTEGER','number',1,'p_number','Mparser.py',156),
  ('number -> DT_FLOAT','number',1,'p_number','Mparser.py',157),
]
